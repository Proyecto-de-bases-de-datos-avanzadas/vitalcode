/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DTO.CitaDTO;
import DTO.MedicoDTO;
import DTO.PacienteNDTO;
import DTO.UsuarioNDTO;
import Exception.NegocioException;
import Exception.PersistenciaException;
import configuracion.DependencyInjector;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author erika
 */
public class frmHistorialCitasMedico extends javax.swing.JFrame {

    /**
     * Creates new form frmHistorialCitasMedico
     */
    public final String nombreMedico;
    public frmHistorialCitasMedico(String nombreMedico) {
        this.nombreMedico=nombreMedico;
        initComponents();
        mostrarCitas();
        
    }
    public void mostrarCitas(){
        try {
            MedicoDTO medicoRecuperado = DependencyInjector.consultarMedico().recuperarMedicoUsuario(nombreMedico);
            
              List<CitaDTO> Citas = DependencyInjector.consultarMedico().obtenerCitas(medicoRecuperado.getId());
              if(Citas.isEmpty()){
                  txtHist.append("No tiene citas registradas");
              }else{
                  txtHist.setText("");
                  for (CitaDTO cita : Citas) {
                     PacienteNDTO pacienteCita = DependencyInjector.actualizarPaciente().recuperarPacienteID(cita.getIdPaciente());
                     String nombrePaciente = pacienteCita.getNombre();
                    txtHist.append(cita.getFecha()+" "+cita.getTipoCita()+" "+nombrePaciente+"\n");
            }
              }
             
         } catch (PersistenciaException ex) {
             Logger.getLogger(frmCitasPaciente.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    public void mostrarCitasFecha(){
    
    try {
            MedicoDTO medicoRecuperado = DependencyInjector.consultarMedico().recuperarMedicoUsuario(nombreMedico);
              
              List<CitaDTO> Citas = DependencyInjector.consultarMedico().obtenerCitasFecha(medicoRecuperado.getId());
              if(Citas.isEmpty()){
                  txtHist.append("No tiene citas registradas");
              }else{
                  txtHist.setText("");
                  for (CitaDTO cita : Citas) {
                     PacienteNDTO pacienteCita = DependencyInjector.actualizarPaciente().recuperarPacienteID(cita.getIdPaciente());
                     String nombrePaciente = pacienteCita.getNombre();
                    txtHist.append(cita.getFecha()+" "+cita.getTipoCita()+" "+cita.getEstadoCita()+nombrePaciente+"\n");
            }
              }
             
         } catch (PersistenciaException ex) {
             Logger.getLogger(frmCitasPaciente.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    
    public void mostrarCitasEstado(){
      try {
            MedicoDTO medicoRecuperado = DependencyInjector.consultarMedico().recuperarMedicoUsuario(nombreMedico);
            
              List<CitaDTO> Citas = DependencyInjector.consultarMedico().obtenerCitasEstado(medicoRecuperado.getId());
              if(Citas.isEmpty()){
                  txtHist.append("No tiene citas registradas");
              }else{
                  txtHist.setText("");
                  for (CitaDTO cita : Citas) {
                     PacienteNDTO pacienteCita = DependencyInjector.actualizarPaciente().recuperarPacienteID(cita.getIdPaciente());
                     String nombrePaciente = pacienteCita.getNombre();
                    txtHist.append(cita.getFecha()+" "+cita.getTipoCita()+" "+nombrePaciente+" "+cita.getEstadoCita()+"\n");
            }
              }
             
         } catch (PersistenciaException ex) {
             Logger.getLogger(frmCitasPaciente.class.getName()).log(Level.SEVERE, null, ex);
         }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblFiltro = new javax.swing.JLabel();
        btnRegresar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHist = new javax.swing.JTextArea();
        cmbFiltrar = new javax.swing.JComboBox<>();
        btnFiltro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(183, 213, 229));
        jPanel1.setPreferredSize(new java.awt.Dimension(854, 498));

        lblTitulo.setFont(new java.awt.Font("Century Gothic", 0, 48)); // NOI18N
        lblTitulo.setText("Mi Historial de citas");

        lblFiltro.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblFiltro.setText("Filtrar por:");

        btnRegresar1.setBackground(new java.awt.Color(0, 0, 0));
        btnRegresar1.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar1.setText("Regresar");
        btnRegresar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegresar1MouseClicked(evt);
            }
        });
        btnRegresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresar1ActionPerformed(evt);
            }
        });

        txtHist.setColumns(20);
        txtHist.setRows(5);
        jScrollPane2.setViewportView(txtHist);

        cmbFiltrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fecha", "Estado" }));

        btnFiltro.setText("Filtrar");
        btnFiltro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFiltroMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(196, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lblFiltro)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTitulo)
                                .addGap(196, 196, 196))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnRegresar1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(309, 309, 309))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblTitulo)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltro)
                    .addComponent(cmbFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegresar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegresar1MouseClicked
        frmPantallaPrincipalMedico pantallaprincipalMed = new frmPantallaPrincipalMedico();
        pantallaprincipalMed.setNombreMedico(nombreMedico);
        pantallaprincipalMed.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnRegresar1MouseClicked

    private void btnRegresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresar1ActionPerformed

    private void btnFiltroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFiltroMouseClicked
        String filtro = (String)cmbFiltrar.getSelectedItem();
        
        if (filtro =="Fecha"){
            mostrarCitasFecha();
        }else{
            mostrarCitasEstado();
        }
    }//GEN-LAST:event_btnFiltroMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltro;
    private javax.swing.JButton btnRegresar1;
    private javax.swing.JComboBox<String> cmbFiltrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextArea txtHist;
    // End of variables declaration//GEN-END:variables
}
